@import "normalize";
@import "cangrid-setup";

/*------------------------------------------------------------------------*/
/*----------------------------- MOBILE FIRST -----------------------------*/
/*------------------------------------------------------------------------*/

// Rows clear floats and cover 100%
.grid-wrapper {
    @extend %clearfix; 
    @extend %border-box; 

    padding-right: $gutter !important; 
    padding-left: $gutter !important;
}

.row {
    @extend %clearfix; 
    @extend %border-box;
    
    padding: $gutter/2 0 ;
    min-height: 1px;
    width: 100%;

    // Special cases for the first and last child
    &:first-child {
        padding-top: $gutter;
    }

    &:last-child {
        padding-bottom: $gutter;
    }
}

// Colums also cover 100% in mobile
[class*='col-'] {
    @extend %border-box;
    
    padding: 0;
    float: left;
    min-height: 1px;
    width: 100%; 

}

// Columns can be centered
.centered {
    float: none;
    margin: 0 auto;
}

// We can force columns to cover adjusted % if we want
@for $i from 1 through $noColumns {      
    .forced-width-#{$i} {         
        width: 100% / $noColumns * $i;   
    }           
}

[class*='forced-width-'] {

        padding: 0 $gutter/2;

        &:first-of-type {
            padding-left: 0;
        }

        &:last-of-type {
            padding-right: 0;
        }

    }

/*------------------------------------------------------------------------*/
/*----------------------------- LARGER SCREENS ---------------------------*/
/*------------------------------------------------------------------------*/

@media only screen and (min-width: $breakpoint) { 
    [class*='col-'] {

        padding: 0 $gutter/2;

        &:first-of-type {
            padding-left: 0;
        }

        &:last-of-type {
            padding-right: 0;
        }

    }

    @for $i from 1 through $noColumns {      
        .col-#{$i} {         
            width: 100% / $noColumns * $i;   
        }           
    }   


}



